{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.jsx","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorMsg/ErrorMsg.jsx","services/apiService.js","App.js","index.js"],"names":["module","exports","Container","children","Searchbar","onHandleSubmit","useState","query","setQuery","className","s","SearchForm","onSubmit","e","preventDefault","trim","toast","error","type","button","label","input","autoComplete","placeholder","value","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","image","onClick","ImageGallery","images","map","id","Loader","color","height","width","timeout","Button","onLoadMore","buttonContainer","Modal","onToggleModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","document","querySelector","ErrorMsg","message","textError","texterror","role","apiService","page","a","axios","get","data","hits","App","setImages","setlargeImageURL","setPage","setError","isLoading","setIsLoading","showModal","setShowModal","request","length","prevImages","fetchImages","toggleModal","scrollPage","setTimeout","scrollBy","innerHeight","newSearch","dataset","source","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78d7788e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1ekwz\",\"image\":\"ImageGalleryItem_image__2iyK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Button_buttonContainer__4pBTH\",\"Button\":\"Button_Button__3FDUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1xKbE\",\"Modal\":\"Modal_Modal__2aD55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1-Il4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__TdXvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__36DXs\",\"SearchForm\":\"Searchbar_SearchForm__1ASCT\",\"button\":\"Searchbar_button__nKxv0\",\"label\":\"Searchbar_label__1cOGR\",\"input\":\"Searchbar_input__UoGXo\"};","import PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","// import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({ onHandleSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      return toast.error('Полууууундра!');\r\n    }\r\n\r\n    onHandleSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={onSubmit}>\r\n        <button type=\"submit\" className={s.button}>\r\n          <span className={s.label}>Search</span>\r\n        </button>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search IMG\"\r\n          value={query}\r\n          onChange={({ target }) => setQuery(target.value)}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n// function Searchbar({ onSubmit, onChange, value }) {\r\n//   return (\r\n//     <header className={s.Searchbar}>\r\n//       <form className={s.SearchForm} onSubmit={onSubmit}>\r\n//         <button type=\"submit\" className={s.button}>\r\n//           <span className={s.label}>Search</span>\r\n//         </button>\r\n\r\n// <input\r\n//   className={s.input}\r\n//   type=\"text\"\r\n//   autoComplete=\"off\"\r\n//   autoFocus\r\n//   placeholder=\"Search IMG\"\r\n//   value={value}\r\n//   onChange={onChange}\r\n// />\r\n//       </form>\r\n//     </header>\r\n//   );\r\n// }\r\n\r\n// export default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  onOpenModal,\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className={s.image}\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/';\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// function ImageGallery({ images, onOpenModal }) {\r\n//   return (\r\n//     <ul className={s.ImageGallery}>\r\n//       {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n//         <ImageGalleryItem\r\n//           key={id}\r\n//           webformatURL={webformatURL}\r\n//           largeImageURL={largeImageURL}\r\n//           tags={tags}\r\n//           onOpenModal={onOpenModal}\r\n//         />\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\n// export default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      className={s.Loader}\r\n      type=\"Circles\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Button.module.css';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <div className={s.buttonContainer}>\r\n      <button type=\"button\" className={s.Button} onClick={onLoadMore}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const Button = ({ onLoadMore }) => {\r\n//   return (\r\n//     <div className={s.buttonContainer}>\r\n//       <button type=\"button\" className={s.Button} onClick={onLoadMore}>\r\n//         Load more\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Button;\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n","// import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nexport default function Modal({ largeImageURL, onToggleModal }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onToggleModal();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onToggleModal]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modalPortal'),\r\n  );\r\n}\r\n\r\n// class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleChange);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleChange);\r\n//   }\r\n\r\n//   handleChange = e => {\r\n//     if (e.code === 'Escape' || e.target === e.currentTarget) {\r\n//       this.props.onToggleModal();\r\n//     }\r\n//   };\r\n\r\n// handleKeyDown = e => {\r\n//   if (e.code === 'Escape') {\r\n//     this.props.onToggleModal();\r\n//   }\r\n// };\r\n\r\n// handleBackdropClick = e => {\r\n//   if (e.currentTarget === e.target) {\r\n//     this.props.onToggleModal();\r\n//   }\r\n// };\r\n\r\n//   render() {\r\n//     const { largeImageURL } = this.props;\r\n\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={this.handleChange}>\r\n//         <div className={s.Modal}>\r\n//           <img src={largeImageURL} alt=\"\" />\r\n//         </div>\r\n//       </div>,\r\n//       document.querySelector('#modalPortal'),\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Modal;\r\n\r\nModal.propTypes = {\r\n  onToggleModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ErrorMsg(message) {\r\n  //   console.dir(message);\r\n  const textError = message.texterror;\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry! Error: {`${textError}`}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorMsg.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import axios from 'axios';\r\n\r\n// async function fetchImages(query, page) {\r\n//   const key = '19126465-26bd87e2bd73b1dc294301845';\r\n//   axios.defaults.baseURL = `https://pixabay.com/api`;\r\n// const url = `/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n//   // console.dir(axios);\r\n//   const response = await axios.get(url);\r\n//   const data = await response.data;\r\n//   const pics = await data.hits;\r\n\r\n//   return pics;\r\n// }\r\n\r\n// export default fetchImages;\r\n\r\nconst apiService = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=19126465-26bd87e2bd73b1dc294301845&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n\r\n  return data.hits;\r\n};\r\n\r\nexport default apiService;\r\n","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\n\nimport Container from './components/Container/';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from './components/Loader';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport ErrorMsg from './components/ErrorMsg/ErrorMsg';\n\nimport { ToastContainer } from 'react-toastify';\n// import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport apiService from './services/apiService';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setlargeImageURL] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchImages = async () => {\n      try {\n        const request = await apiService(query, page);\n\n        if (request.length === 0) {\n          return setError(`Ничего такого '${query}' - НЕТ!`);\n        }\n\n        setImages(prevImages => [...prevImages, ...request]);\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [query, page]);\n\n  const serchImages = newSearch => {\n    setQuery(newSearch);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = e => {\n    setlargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy(0, window.innerHeight + 150);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <Container>\n        <Searchbar onHandleSubmit={serchImages} />\n\n        {error && <ErrorMsg texterror={error} />}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onOpenModal={onOpenModal} />\n        )}\n\n        {isLoading && <Loader />}\n\n        {!isLoading && images.length > 0 && <Button onLoadMore={onLoadMore} />}\n\n        {showModal && (\n          <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL} />\n        )}\n\n        <ToastContainer autoClose={5000} />\n      </Container>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     query: '',\n//     images: [],\n//     largeImageURL: '',\n//     page: 1,\n//     isLoading: false,\n//     error: null,\n//     showModal: false,\n//   };\n\n//   componentDidUpdate(_, prevState) {\n//     if (prevState.query !== this.state.query) {\n//       this.setState({ images: [], page: 1 });\n//     }\n//   }\n\n//   searchImages = async () => {\n//     const { query, page } = this.state;\n\n//     if (query.trim() === '') {\n//       return toast.error('Sry, you are missing the letters');\n//     }\n\n//     this.toggleLoader();\n\n//     try {\n//       const request = await fetchImages(query, page);\n//       this.setState(({ images, page }) => ({\n//         images: [...images, ...request],\n//         page: page + 1,\n//       }));\n//       if (request.length === 0) {\n//         this.setState({ error: `No results were found for ${query}!` });\n//       }\n//     } catch (error) {\n//       this.setState({ error: 'Something went wrong. Try again.' });\n//     } finally {\n//       this.toggleLoader();\n//     }\n//   };\n\n//   handleChange = e => {\n//     this.setState({ query: e.target.value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.searchImages();\n//   };\n\n//   onLoadMore = () => {\n//     this.searchImages();\n//     this.scrollPage();\n//   };\n\n//   toggleLoader = () => {\n//     this.setState(({ isLoading }) => ({\n//       isLoading: !isLoading,\n//     }));\n//   };\n\n//   onOpenModal = e => {\n//     this.setState({ largeImageURL: e.target.dataset.source });\n//     this.toggleModal();\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   scrollPage = () => {\n//     setTimeout(() => {\n//       window.scrollBy({\n//         top: document.documentElement.clientHeight - 10,\n//         behavior: 'smooth',\n//       });\n//     }, 1000);\n//   };\n\n//   render() {\n//     const {\n//       query,\n//       images,\n//       isLoading,\n//       showModal,\n//       largeImageURL,\n//       // showButton,\n//     } = this.state;\n\n//     return (\n//       <div>\n//         <Searchbar\n//           value={query}\n//           onSubmit={this.handleSubmit}\n//           onChange={this.handleChange}\n//         />\n\n//         {/* {error && <ErrorView texterror={error} />} */}\n//         {images.length > 0 && (\n//           <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n//         )}\n\n//         {isLoading && <Loader />}\n//         {!isLoading && images.length > 0 && (\n//           <Button onLoadMore={this.onLoadMore} />\n//         )}\n\n//         {showModal && (\n//           <Modal\n//             onToggleModal={this.toggleModal}\n//             largeImageURL={largeImageURL}\n//           />\n//         )}\n\n//         <ToastContainer autoClose={5000} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}